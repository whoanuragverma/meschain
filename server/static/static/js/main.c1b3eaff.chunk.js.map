{"version":3,"sources":["components/AuthPage/index.js","components/HomePage/ChatHistoryItem.js","components/HomePage/chatHistory.js","assets/nochat.png","components/HomePage/Message.js","components/HomePage/UserInfo.js","components/HomePage/ChatPage.js","components/HomePage/Logs.js","components/HomePage/LogsMenu.js","components/HomePage/index.js","components/OnBoarding/index.js","App.js","index.js"],"names":["AuthPage","sessionStorage","window","location","hash","useState","value","setValue","page","setPage","className","Card","width","mx","my","maxWidth","bg","color","border","p","style","boxShadow","Fragment","Heading","Text","Box","display","justifyContent","Field","label","Input","type","required","accept","placeholder","onChange","event","file","nativeEvent","srcElement","files","reader","FileReader","onload","e","setItem","target","result","readAsText","fontStyle","Link","title","onClick","Button","icon","iconpos","randomColor","Math","floor","random","toString","ChatHistoryItem","address","lastText","name","handler","ref","useRef","borderBottom","padding","blockie","current","canvas","toDataURL","Blockie","borderRadius","opts","seed","bgcolor","spotcolor","fontWeight","slice","ChatHistory","set","notifier","toggle","setToggle","friend","setFriend","ListChats","setListChats","useEffect","peer","identity","subscribe","localStorage","JSON","parse","from","forEach","el","data","to","user","keyHash","find","o","props","getItem","message","username","alignItems","h6","margin","userInfo","icononly","size","mr","document","querySelector","children","reload","fontSize","EthAddress","Form","ml","preventDefault","privateMSG","undefined","toastProvider","addMessage","secondaryMessage","colorTheme","variant","height","overflowY","map","ToastMessage","Provider","node","Message","time","sent","marginBottom","classList","contains","UserInfo","addr","setName","names","length","Avatar","src","ChatPage","curr","conn","setConn","renderMsg","setRenderMsg","numConnections","decrypt","publicKey","secretKey","Date","timestamp","getHours","getMinutes","flexDirection","gap","NoMsg","h4","marginTop","class","transform","Outline","borderBottomRightRadius","borderTopRightRadius","backgroundColor","marginRight","marginLeft","item","pk","sk","broadCast","encrypt","borderTopLeftRadius","borderBottomLeftRadius","Logs","text","background","wordBreak","LogsMenu","active","setActive","Chain","setChain","logs","setLogs","logger","minerLog","borderLeft","theme","indentWidth","enableClipboard","displayDataTypes","collapsed","HomePage","currChat","setCurrChat","updateEvent","newUpdateEvent","OnBoarding","kind","User","Peer","whoami","a","createElement","href","URL","createObjectURL","Blob","stringify","download","click","revokeObjectURL","PrivateRoute","Component","component","rest","render","clear","pathname","state","App","path","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c1b3eaff.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n    Box,\r\n    Button,\r\n    Card,\r\n    Field,\r\n    Heading,\r\n    Input,\r\n    Link,\r\n    Text,\r\n} from \"rimble-ui\";\r\nfunction AuthPage() {\r\n    if (sessionStorage[\"whoami\"]) window.location.hash = \"#/\";\r\n    function keyUpload(event) {\r\n        const file = event.nativeEvent.srcElement.files[0];\r\n        const reader = new FileReader();\r\n        reader.onload = function (e) {\r\n            sessionStorage.setItem(\"file\", e.target.result);\r\n            sessionStorage.setItem(\"kind\", 0);\r\n            window.location.hash = \"#/setup\";\r\n        };\r\n        reader.readAsText(file);\r\n    }\r\n    const [value, setValue] = useState(\"\");\r\n    const [page, setPage] = useState(1);\r\n    return (\r\n        <div className=\"main__class\">\r\n            <Card\r\n                width={\"auto\"}\r\n                mx={\"auto\"}\r\n                my={\"auto\"}\r\n                maxWidth={\"420px\"}\r\n                bg={\"#2c2c2c\"}\r\n                color={\"white\"}\r\n                border={0}\r\n                p={4}\r\n                style={{ boxShadow: \"9px 9px 8px rgb(0 0 0)\" }}\r\n            >\r\n                {page === 0 && (\r\n                    <React.Fragment>\r\n                        <Heading>Log In to Meschain</Heading>\r\n                        <Text.p>\r\n                            If you have your keys with you go ahead and upload\r\n                            them\r\n                        </Text.p>\r\n                        <Box\r\n                            mx={\"auto\"}\r\n                            style={{\r\n                                display: \"flex\",\r\n                                justifyContent: \"center\",\r\n                            }}\r\n                        >\r\n                            <Field label=\"Your key file\">\r\n                                <Input\r\n                                    type=\"file\"\r\n                                    required={true}\r\n                                    accept=\".meschain\"\r\n                                    placeholder=\"Keys\"\r\n                                    onChange={keyUpload}\r\n                                />\r\n                            </Field>\r\n                        </Box>\r\n                        <Text.p style={{ fontStyle: \"italic\" }}>\r\n                            Don't have keys? Get new one{\" \"}\r\n                            <Link\r\n                                title=\"Click here to signup\"\r\n                                onClick={() => setPage(1)}\r\n                            >\r\n                                here.\r\n                            </Link>\r\n                        </Text.p>\r\n                    </React.Fragment>\r\n                )}\r\n                {page === 1 && (\r\n                    <React.Fragment>\r\n                        <Heading>SignUp for Meschain</Heading>\r\n                        <Text.p>\r\n                            No need for email or mobile. Just enter a name as\r\n                            you like.\r\n                        </Text.p>\r\n                        <Box mx={\"auto\"}>\r\n                            <Field label=\"Your Name\" style={{ width: \"100%\" }}>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    style={{ width: \"100%\" }}\r\n                                    value={value}\r\n                                    onChange={(e) => setValue(e.target.value)}\r\n                                    placeholder=\"eg. Superman\"\r\n                                />\r\n                            </Field>\r\n                            <Button\r\n                                icon=\"ArrowForward\"\r\n                                iconpos=\"right\"\r\n                                onClick={() => {\r\n                                    sessionStorage.setItem(\"user\", value);\r\n                                    sessionStorage.setItem(\"kind\", 1);\r\n                                    window.location.hash = \"#/setup\";\r\n                                }}\r\n                            >\r\n                                Lets go\r\n                            </Button>\r\n                        </Box>\r\n                        <Text.p style={{ fontStyle: \"italic\" }}>\r\n                            Already have keys? Log In{\" \"}\r\n                            <Link\r\n                                title=\"Click here to login\"\r\n                                onClick={() => setPage(0)}\r\n                            >\r\n                                here.\r\n                            </Link>\r\n                        </Text.p>\r\n                    </React.Fragment>\r\n                )}\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AuthPage;\r\n","import React, { useRef } from \"react\";\r\nimport { Blockie, Box, Text } from \"rimble-ui\";\r\nconst randomColor = () =>\r\n    `#${Math.floor(Math.random() * 16777215).toString(16)}`;\r\nfunction ChatHistoryItem({ address, lastText, name, handler }) {\r\n    const ref = useRef();\r\n    return (\r\n        <Box\r\n            style={{\r\n                display: \"flex\",\r\n                borderBottom: \"1px solid #ded7d7\",\r\n                padding: \"10px\",\r\n            }}\r\n            onClick={() => {\r\n                handler({\r\n                    address: address,\r\n                    blockie: ref.current.canvas.toDataURL(),\r\n                });\r\n            }}\r\n        >\r\n            <Blockie\r\n                style={{ borderRadius: \"50%\" }}\r\n                opts={{\r\n                    seed: address,\r\n                    color: randomColor(),\r\n                    bgcolor: randomColor(),\r\n                    spotcolor: randomColor(),\r\n                }}\r\n                ref={ref}\r\n            />\r\n            <span className=\"d-flex flex-column pl-2\">\r\n                <Text fontWeight={\"bold\"} p={0}>\r\n                    {name.slice(0, 40)}\r\n                </Text>\r\n                <small>{lastText}</small>\r\n            </span>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default ChatHistoryItem;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n    Blockie,\r\n    Box,\r\n    Button,\r\n    EthAddress,\r\n    Field,\r\n    Form,\r\n    Heading,\r\n    Input,\r\n    Text,\r\n    ToastMessage,\r\n} from \"rimble-ui\";\r\nimport ChatHistoryItem from \"./ChatHistoryItem\";\r\n\r\nfunction ChatHistory({ set, notifier }) {\r\n    const randomColor = () =>\r\n        `#${Math.floor(Math.random() * 16777215).toString(16)}`;\r\n    const [toggle, setToggle] = useState(false);\r\n    const [friend, setFriend] = useState(\"\");\r\n    const [ListChats, setListChats] = useState([]);\r\n    useEffect(() => {\r\n        window.peer.identity.subscribe((e) => {\r\n            try {\r\n                localStorage.setItem(JSON.parse(e).from, e);\r\n                // window.currentChat = JSON.parse(e).data.message.username;\r\n                set(JSON.parse(e).from);\r\n            } catch {}\r\n        });\r\n        setListChats([]);\r\n\r\n        notifier?.forEach((el) => {\r\n            if (\r\n                (el.data.to === window.user.keyHash ||\r\n                    el.data.to?.address === window.user.keyHash ||\r\n                    el.data.from === window.user.keyHash) &&\r\n                !ListChats.find((o) => o.props.address === el.data.from)\r\n            ) {\r\n                // If message is addresed to me then create a new chat history\r\n                setListChats([\r\n                    ...ListChats,\r\n                    <ChatHistoryItem\r\n                        name={\r\n                            JSON.parse(localStorage.getItem(el?.data.from))\r\n                                ?.data.message.username || el?.data.from\r\n                        }\r\n                        address={el.data.from}\r\n                        lastText=\"New Message\"\r\n                        handler={set}\r\n                        key={el.data.from}\r\n                    />,\r\n                ]);\r\n            }\r\n        });\r\n    }, [notifier]);\r\n\r\n    function newFriend(event) {\r\n        event.preventDefault();\r\n        try {\r\n            if (!localStorage.getItem(friend))\r\n                window.peer.privateMSG(undefined, friend, \"WHO\");\r\n            else {\r\n                set(friend);\r\n            }\r\n        } catch {\r\n            window.toastProvider.addMessage(\r\n                \"Couldn't connect to your friend 😌\",\r\n                {\r\n                    secondaryMessage:\r\n                        \"May be you entered a wrong address or they are offline\",\r\n                    colorTheme: \"light\",\r\n                    variant: \"failure\",\r\n                }\r\n            );\r\n        }\r\n        setFriend(\"\");\r\n    }\r\n    function hideLogs() {\r\n        setToggle(!toggle);\r\n        if (toggle) {\r\n            document.querySelector(\".logs\").style = \"\";\r\n            document.querySelector(\".chats\").style = \"\";\r\n            document.querySelector(\".chats\").children[0].style = \"\";\r\n            document.querySelector(\".chats\").children[1].style = \"\";\r\n        } else {\r\n            document.querySelector(\".logs\").style = \"display: none\";\r\n            document.querySelector(\".chats\").style = \"width: 100%\";\r\n            document.querySelector(\".chats\").children[0].style = \"width: 35%\";\r\n            document.querySelector(\".chats\").children[1].style = \"width: 65%\";\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <Box\r\n                bg={\"#2f3136\"}\r\n                p={2}\r\n                style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"space-between\",\r\n                    alignItems: \"center\",\r\n                }}\r\n            >\r\n                <Blockie\r\n                    style={{ borderRadius: \"50%\" }}\r\n                    opts={{\r\n                        seed: sessionStorage[\"whoami\"],\r\n                        color: randomColor(),\r\n                        bgcolor: randomColor(),\r\n                        spotcolor: randomColor(),\r\n                    }}\r\n                />\r\n\r\n                <Heading.h6 style={{ margin: 0 }}>\r\n                    Chats of {window.user.userInfo.username || \"Anonymous\"}\r\n                </Heading.h6>\r\n                <span style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                    <Button.Text\r\n                        icon=\"Info\"\r\n                        icononly={true}\r\n                        size=\"small\"\r\n                        title=\"Stats for Nerds\"\r\n                        mr={2}\r\n                        className=\"logsBTN\"\r\n                        onClick={hideLogs}\r\n                        style={{ color: \"#ffffff\" }}\r\n                    />\r\n                    <Button\r\n                        icon=\"PowerSettingsNew\"\r\n                        size=\"small\"\r\n                        iconpos=\"right\"\r\n                        onClick={() => window.location.reload()}\r\n                    >\r\n                        Log Out\r\n                    </Button>\r\n                </span>\r\n            </Box>\r\n            <Box p={2} bg={\"#36393f\"}>\r\n                <Text fontSize=\"1\">Your Meschain Address</Text>\r\n                <EthAddress\r\n                    address={sessionStorage[\"whoami\"]}\r\n                    className=\"hideQR\"\r\n                />\r\n            </Box>\r\n            <Box p={2} bg={\"#2f3136\"}>\r\n                <Form className=\"fullWidth\">\r\n                    <Field label=\"Your Friends Meschain Address\">\r\n                        <Input\r\n                            type=\"text\"\r\n                            placeholder=\"Ask your friend to share their address\"\r\n                            style={{ width: \"100%\" }}\r\n                            required={true}\r\n                            value={friend}\r\n                            onChange={(e) => setFriend(e.target.value)}\r\n                        />\r\n                    </Field>\r\n                    <Button\r\n                        icon=\"Add\"\r\n                        icononly={true}\r\n                        ml={2}\r\n                        onClick={newFriend}\r\n                    ></Button>\r\n                </Form>\r\n            </Box>\r\n            <Box bg={\"#46484b\"} style={{ height: \"100%\", overflowY: \"auto\" }}>\r\n                {ListChats.map((el) => el)}\r\n                <div className=\"d-flex align-items-center justify-content-center my-5 py-5\">\r\n                    <span>\r\n                        Your chats will appear here. Try sending a new message.\r\n                        📝\r\n                    </span>\r\n                </div>\r\n            </Box>\r\n            <>\r\n                <ToastMessage.Provider\r\n                    ref={(node) => (window.toastProvider = node)}\r\n                />\r\n            </>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChatHistory;\r\n","export default __webpack_public_path__ + \"static/media/nochat.0f4e4e0d.png\";","import React, { useRef } from \"react\";\r\n\r\nfunction Message({ message, time, sent }) {\r\n    const ref = useRef();\r\n    const handleTime = () => {\r\n        if (ref.current.children[0].children[0].classList.contains(\"d-none\"))\r\n            ref.current.style.marginBottom = \"15px\";\r\n        else ref.current.style.marginBottom = \"4px\";\r\n        ref.current.children[0].children[0].classList.toggle(\"d-none\");\r\n    };\r\n    return (\r\n        <div\r\n            className={\r\n                sent\r\n                    ? \"d-flex justify-content-end anim\"\r\n                    : \"d-flex justify-content-start anim\"\r\n            }\r\n            style={{\r\n                marginBottom: \"4px\",\r\n            }}\r\n            ref={ref}\r\n            onClick={handleTime}\r\n        >\r\n            <div className={sent ? \"msg_cotainer\" : \"msg_cotainer_send\"}>\r\n                {message}\r\n                <span\r\n                    className={\r\n                        sent ? \"msg_time d-none\" : \"msg_time_send d-none\"\r\n                    }\r\n                >\r\n                    {time}\r\n                </span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Message;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Avatar, Text, Blockie } from \"rimble-ui\";\r\nfunction UserInfo({ addr }) {\r\n    const randomColor = () =>\r\n        `#${Math.floor(Math.random() * 16777215).toString(16)}`;\r\n    const [name, setName] = useState();\r\n    useEffect(() => {\r\n        const names = [\r\n            \"Panda\",\r\n            \"Kiwi\",\r\n            \"Mango\",\r\n            \"Doge\",\r\n            \"Dragon\",\r\n            \"Ninja\",\r\n            \"Koala\",\r\n            \"Tiger\",\r\n            \"Quokka\",\r\n            \"Bull\",\r\n            \"Chicken\",\r\n        ];\r\n        setName(\"Anonymous \" + names[Math.floor(Math.random() * names.length)]);\r\n    }, [addr.address]);\r\n    return (\r\n        <React.Fragment>\r\n            {addr.blockie && <Avatar src={addr.blockie} size=\"45px\" />}\r\n            {!addr.blockie && (\r\n                <Blockie\r\n                    style={{ borderRadius: \"50%\" }}\r\n                    opts={{\r\n                        seed: addr.address,\r\n                        color: randomColor(),\r\n                        bgcolor: randomColor(),\r\n                        spotcolor: randomColor(),\r\n                    }}\r\n                />\r\n            )}\r\n            <Text p={2}>\r\n                {JSON.parse(localStorage.getItem(addr.address))?.data.message\r\n                    .username || name}\r\n            </Text>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default UserInfo;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Box, Text, Heading, Input, Button } from \"rimble-ui\";\r\nimport NoMsg from \"../../assets/nochat.png\";\r\nimport Message from \"./Message\";\r\nimport UserInfo from \"./UserInfo\";\r\nfunction ChatPage({ curr, notifier }) {\r\n    const [conn, setConn] = useState(0);\r\n    const ref = useRef();\r\n    const [renderMsg, setRenderMsg] = useState([]);\r\n    function sendMessage() {\r\n        const item = JSON.parse(localStorage.getItem(curr.address || curr));\r\n        const message = ref.current.value;\r\n        const pk = item.data.message.publicKey;\r\n        const sk = window.user.userInfo.secretKey;\r\n        window.peer.broadCast(window.encrypt(pk, sk, message, curr), \"BLOCK\");\r\n        ref.current.value = \"\";\r\n        setRenderMsg([\r\n            ...renderMsg,\r\n            <Message\r\n                message={message}\r\n                time={`${new Date().getHours()}:${new Date().getMinutes()}`}\r\n                sent={true}\r\n                key={message}\r\n            />,\r\n        ]);\r\n    }\r\n    useEffect(() => {\r\n        window.peer.numConnections.subscribe((e) => setConn(e));\r\n        setRenderMsg([]);\r\n        // console.log(renderMsg);\r\n        window.notifier?.subscribe((e) => {\r\n            e.forEach((el) => {\r\n                if (\r\n                    el.data.to === window.user.keyHash ||\r\n                    el.data.to?.address === window.user.keyHash\r\n                ) {\r\n                    const message = window.decrypt(\r\n                        JSON.parse(localStorage.getItem(el.data.from)).data\r\n                            .message.publicKey,\r\n                        window.user.userInfo.secretKey,\r\n                        el.data\r\n                    );\r\n                    setRenderMsg([\r\n                        ...renderMsg,\r\n                        <Message\r\n                            message={message.message}\r\n                            sent={false}\r\n                            time={`${new Date(\r\n                                message.timestamp\r\n                            ).getHours()}:${new Date(\r\n                                message.timestamp\r\n                            ).getMinutes()}`}\r\n                        />,\r\n                    ]);\r\n                }\r\n            });\r\n        });\r\n    }, [curr]);\r\n\r\n    return (\r\n        <div className=\"hideChat\">\r\n            <Box style={{ height: \"100%\" }} color=\"#ffffff\">\r\n                {!curr && (\r\n                    <React.Fragment>\r\n                        <div\r\n                            style={{\r\n                                display: \"flex\",\r\n                                alignItems: \"center\",\r\n                                justifyContent: \"center\",\r\n                                height: \"inherit\",\r\n                            }}\r\n                        >\r\n                            <span\r\n                                style={{\r\n                                    display: \"flex\",\r\n                                    alignItems: \"center\",\r\n                                    justifyContent: \"center\",\r\n                                    flexDirection: \"column\",\r\n                                    gap: \"0.5rem\",\r\n                                }}\r\n                            >\r\n                                <img src={NoMsg} width=\"200\" />\r\n                                <Heading.h4 my={1}>\r\n                                    It's always nice to chat with to someone\r\n                                </Heading.h4>\r\n                                <Text my={0}>\r\n                                    Pick a chat from the left menu, or add your\r\n                                    friends to start a new chat.\r\n                                </Text>\r\n                                <Text my={1}>\r\n                                    By the way you're currently directly\r\n                                    connected to <b>{conn}</b> users.\r\n                                </Text>\r\n                                <small\r\n                                    style={{\r\n                                        marginTop: \"2rem\",\r\n                                        width: \"60%\",\r\n                                    }}\r\n                                >\r\n                                    All your messages are always end-to-end\r\n                                    encrypted to never go to any server.\r\n                                    Everything happens on a blockchain powered\r\n                                    by people like you. <wbr /> Meschain is\r\n                                    built on top of blockchain where all the\r\n                                    users compete to add your new message to the\r\n                                    blockchain. Note that once you've sent a\r\n                                    message it is for forever no one (not even\r\n                                    you) can alter or delete it.\r\n                                </small>\r\n                            </span>\r\n                        </div>\r\n                    </React.Fragment>\r\n                )}\r\n                {curr && (\r\n                    <React.Fragment>\r\n                        <Box\r\n                            bg={\"#4a4a4a\"}\r\n                            p={2}\r\n                            style={{\r\n                                display: \"flex\",\r\n                                alignItems: \"center\",\r\n                            }}\r\n                        >\r\n                            <UserInfo addr={curr} />\r\n                        </Box>\r\n                        <div>\r\n                            <div class=\"card-body msg_card_body\">\r\n                                <div\r\n                                    style={{\r\n                                        display: \"flex\",\r\n                                        \"justify-content\": \"center\",\r\n                                        transform: \"scale(0.8)\",\r\n                                    }}\r\n                                >\r\n                                    {/* <Button\r\n                                        size=\"small\"\r\n                                        mr={3}\r\n                                        style={{\r\n                                            \"background-color\": \"a7a7ad\",\r\n                                        }}\r\n                                    >\r\n                                        Today\r\n                                    </Button> */}\r\n                                </div>\r\n                                {renderMsg.map((el) => el)}\r\n                            </div>\r\n                            <div\r\n                                style={{\r\n                                    display: \"flex\",\r\n                                    alignItems: \"center\",\r\n                                }}\r\n                            >\r\n                                <Button.Outline\r\n                                    icon=\"Attachment\"\r\n                                    icononly\r\n                                    style={{\r\n                                        borderBottomRightRadius: 0,\r\n                                        borderTopRightRadius: 0,\r\n                                        backgroundColor: \"#ffffff\",\r\n                                        marginRight: 0,\r\n                                        marginLeft: 25,\r\n                                    }}\r\n                                ></Button.Outline>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    required={true}\r\n                                    placeholder=\"Type your message...\"\r\n                                    ref={ref}\r\n                                    style={{\r\n                                        width: \"60vw\",\r\n                                        margin: \"5px 0px\",\r\n                                        \"border-radius\": 0,\r\n                                    }}\r\n                                />\r\n                                <Button\r\n                                    icon=\"Send\"\r\n                                    icononly\r\n                                    onClick={sendMessage}\r\n                                    style={{\r\n                                        marginRight: \"30px\",\r\n                                        borderTopLeftRadius: 0,\r\n                                        borderBottomLeftRadius: 0,\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </React.Fragment>\r\n                )}\r\n            </Box>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChatPage;\r\n","import React from \"react\";\r\n\r\nfunction Logs({ label, type, text }) {\r\n    return (\r\n        <div\r\n            style={{\r\n                fontSize: \"0.8rem\",\r\n                background: \"#4b4b4b\",\r\n                marginBottom: \"0.3rem\",\r\n                padding: \"0.6rem\",\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n            }}\r\n        >\r\n            <span\r\n                style={{\r\n                    backgroundColor: `${label}`,\r\n                    borderRadius: \"0.4rem\",\r\n                    fontSize: \"0.85rem\",\r\n                    fontWeight: 600,\r\n                    wordBreak: \"keep-all\",\r\n                    margin: \"0 0.2rem\",\r\n                    padding: \"0.2rem 0.3rem\",\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                }}\r\n            >\r\n                {type}\r\n            </span>\r\n            <span>{text}</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Logs;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Box } from \"rimble-ui\";\r\nimport ReactJson from \"react-json-view\";\r\nimport Logs from \"./Logs\";\r\nfunction LogsMenu() {\r\n    const [active, setActive] = useState(\"logs\");\r\n    const [Chain, setChain] = useState([]);\r\n    const [logs, setLogs] = useState([]);\r\n    useEffect(() => {\r\n        window.notifier.subscribe((el) => setChain(el));\r\n        window.peer.logger.subscribe((el) => {\r\n            if (el.length > 10)\r\n                setLogs([\r\n                    ...logs,\r\n                    <Logs\r\n                        text={el}\r\n                        type=\"Discovery\"\r\n                        label=\"#ef7215\"\r\n                        key={el}\r\n                    />,\r\n                ]);\r\n        });\r\n        window.minerLog.subscribe((el) => {\r\n            if (el.length > 3)\r\n                setLogs([\r\n                    ...logs,\r\n                    <Logs text={el} type=\"Miner\" label=\"#46bf14\" key={el} />,\r\n                ]);\r\n        });\r\n    }, []);\r\n    return (\r\n        <div className=\"logs\" style={{ borderLeft: \"1px solid #eeeeee\" }}>\r\n            <div\r\n                className=\"menu\"\r\n                style={{ height: \"100vh\", overflowY: \"hidden\" }}\r\n            >\r\n                <Box\r\n                    bg={\"#2f3136\"}\r\n                    p={2}\r\n                    style={{\r\n                        display: \"flex\",\r\n                        justifyContent: \"space-around\",\r\n                        alignItems: \"center\",\r\n                    }}\r\n                >\r\n                    <span\r\n                        className={`selector ${\r\n                            active === \"logs\" ? \"active\" : \"\"\r\n                        }`}\r\n                        onClick={() => setActive(\"logs\")}\r\n                    >\r\n                        Log\r\n                    </span>\r\n                    <span\r\n                        className={`selector ${\r\n                            active === \"blocks\" ? \"active\" : \"\"\r\n                        }`}\r\n                        onClick={() => setActive(\"blocks\")}\r\n                    >\r\n                        Blockchain\r\n                    </span>\r\n                </Box>\r\n                <Box\r\n                    bg={\"#111111\"}\r\n                    p={2}\r\n                    style={{\r\n                        display: \"flex\",\r\n                        flexDirection: \"column\",\r\n                        height: \"-webkit-fill-available\",\r\n                        wordBreak: \"break-word\",\r\n                        overflowY: \"scroll\",\r\n                        height: \"89.9%\",\r\n                    }}\r\n                >\r\n                    {active === \"logs\" && logs.map((el) => el)}\r\n                    {active === \"blocks\" && (\r\n                        <ReactJson\r\n                            src={Chain}\r\n                            theme=\"colors\"\r\n                            name={\"Blockchain\"}\r\n                            indentWidth={2}\r\n                            enableClipboard={false}\r\n                            displayDataTypes={false}\r\n                            collapsed={true}\r\n                        />\r\n                    )}\r\n                </Box>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default LogsMenu;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport ChatHistory from \"./chatHistory\";\r\nimport ChatPage from \"./ChatPage\";\r\nimport LogsMenu from \"./LogsMenu\";\r\n\r\nfunction HomePage() {\r\n    const [currChat, setCurrChat] = useState(undefined);\r\n    const [updateEvent, newUpdateEvent] = useState();\r\n    useEffect(() => {\r\n        window.notifier.subscribe((el) => newUpdateEvent(el));\r\n    }, []);\r\n    return (\r\n        <div className=\"home\">\r\n            <div className=\"chats\">\r\n                <ChatHistory set={setCurrChat} notifier={updateEvent} />\r\n                <ChatPage curr={currChat} notifier={updateEvent} />\r\n            </div>\r\n            <LogsMenu />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HomePage;\r\n","import React, { useEffect } from \"react\";\r\nimport { Button, Card, Heading, Text, Box } from \"rimble-ui\";\r\nfunction OnBoarding() {\r\n    const kind = sessionStorage[\"kind\"];\r\n    useEffect(() => {\r\n        if (!kind) window.location.hash = \"#/auth\";\r\n        if (kind === \"1\") {\r\n            window.user = new window.User(null, null, sessionStorage[\"user\"]);\r\n            sessionStorage.setItem(\"whoami\", window.user.keyHash);\r\n            window.peer = new window.Peer(\r\n                window.user.keyHash,\r\n                window.user.whoami\r\n            );\r\n        }\r\n        if (kind === \"0\") {\r\n            const file = sessionStorage[\"file\"];\r\n            if (!file) window.location.hash = \"#/auth\";\r\n            window.user = new window.User(\r\n                JSON.parse(file).publicKey,\r\n                JSON.parse(file).secretKey,\r\n                JSON.parse(file).username\r\n            );\r\n            window.peer = new window.Peer(\r\n                window.user.keyHash,\r\n                window.user.whoami\r\n            );\r\n            if (window.user.keyHash !== JSON.parse(file).keyHash)\r\n                window.location.hash = \"#/auth\";\r\n            sessionStorage.setItem(\"whoami\", window.user.keyHash);\r\n            window.location.hash = \"#/\";\r\n        }\r\n    }, []);\r\n\r\n    function downloadKEY() {\r\n        const a = document.createElement(\"a\");\r\n        a.href = window.URL.createObjectURL(\r\n            new Blob([JSON.stringify(window.user.userInfo)], {\r\n                type: \"meschain\",\r\n            })\r\n        );\r\n        a.download = \"key.meschain\";\r\n        a.click();\r\n        window.URL.revokeObjectURL(a.href);\r\n    }\r\n    return (\r\n        <div className=\"main__class\">\r\n            <Card\r\n                width={\"auto\"}\r\n                mx={\"auto\"}\r\n                my={\"auto\"}\r\n                maxWidth={\"420px\"}\r\n                bg={\"#2c2c2c\"}\r\n                color={\"white\"}\r\n                border={0}\r\n                p={4}\r\n                style={{ boxShadow: \"9px 9px 8px rgb(0 0 0)\" }}\r\n            >\r\n                {kind === \"1\" && (\r\n                    <React.Fragment>\r\n                        <Heading>Hang On</Heading>\r\n                        <Text.p>\r\n                            Download your keys and keep them at a safe private\r\n                            place.\r\n                        </Text.p>\r\n                        <Box\r\n                            style={{\r\n                                display: \"flex\",\r\n                                justifyContent: \"center\",\r\n                            }}\r\n                        >\r\n                            <Button.Text\r\n                                icon=\"ArrowForward\"\r\n                                iconpos=\"right\"\r\n                                style={{ color: \"#ffffff\" }}\r\n                                onClick={() => (window.location.hash = \"#/\")}\r\n                            >\r\n                                Continue\r\n                            </Button.Text>\r\n                            <Button mx={4} onClick={downloadKEY}>\r\n                                Download\r\n                            </Button>\r\n                        </Box>\r\n                        <Text.p style={{ fontStyle: \"italic\" }}>\r\n                            If you loose this key their is no way of accessing\r\n                            your messages again.\r\n                        </Text.p>\r\n                    </React.Fragment>\r\n                )}\r\n                {kind === \"0\" && (\r\n                    <React.Fragment>\r\n                        <Heading>Hang On</Heading>\r\n                        <Text.p>\r\n                            Just a moment. We're preparing your chats.\r\n                        </Text.p>\r\n                        <Text.p style={{ fontStyle: \"italic\" }}>\r\n                            You'll be redirected automatically\r\n                        </Text.p>\r\n                    </React.Fragment>\r\n                )}\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default OnBoarding;\r\n","import React from \"react\";\r\nimport {\r\n    HashRouter as Router,\r\n    Route,\r\n    Switch,\r\n    Redirect,\r\n} from \"react-router-dom\";\r\nimport AuthPage from \"./components/AuthPage/index\";\r\nimport HomePage from \"./components/HomePage/index\";\r\nimport OnBoarding from \"./components/OnBoarding\";\r\nfunction App() {\r\n    return (\r\n        <Router>\r\n            <Switch>\r\n                <Route path=\"/auth\" component={AuthPage} />\r\n                <Route path=\"/setup\" component={OnBoarding} />\r\n                <PrivateRoute path=\"/\" component={HomePage} />\r\n            </Switch>\r\n        </Router>\r\n    );\r\n}\r\nfunction authGuard() {\r\n    if (!sessionStorage[\"whoami\"]) return false;\r\n    if (!window.user) {\r\n        sessionStorage.clear();\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\nfunction PrivateRoute({ component: Component, ...rest }) {\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={(props) =>\r\n                authGuard() === true ? (\r\n                    <Component {...props} />\r\n                ) : (\r\n                    <Redirect\r\n                        to={{\r\n                            pathname: \"/auth\",\r\n                            state: { from: props.location },\r\n                        }}\r\n                    />\r\n                )\r\n            }\r\n        />\r\n    );\r\n}\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}