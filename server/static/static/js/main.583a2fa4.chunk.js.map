{"version":3,"sources":["components/AuthPage/index.js","components/HomePage/chatHistory.js","assets/nochat.png","components/HomePage/ChatPage.js","components/HomePage/index.js","components/OnBoarding/index.js","App.js","index.js"],"names":["AuthPage","sessionStorage","window","location","hash","useState","value","setValue","page","setPage","className","Card","width","mx","my","maxWidth","bg","color","border","p","style","boxShadow","Fragment","Heading","Text","Box","display","justifyContent","Field","label","Input","type","required","accept","placeholder","onChange","event","file","nativeEvent","srcElement","files","reader","FileReader","onload","e","setItem","target","result","readAsText","fontStyle","Link","title","onClick","Button","icon","iconpos","ChatHistory","props","randomColor","Math","floor","random","toString","toggle","setToggle","friend","setFriend","useEffect","peer","identity","subscribe","localStorage","JSON","parse","from","alignItems","Blockie","borderRadius","opts","seed","bgcolor","spotcolor","h6","margin","user","userInfo","username","icononly","size","mr","document","querySelector","children","reload","fontSize","EthAddress","address","Form","ml","preventDefault","getItem","privateMSG","undefined","alert","height","overflowY","ChatPage","conn","setConn","numConnections","curr","flexDirection","gap","src","NoMsg","h4","marginTop","HomePage","currChat","setCurrChat","set","OnBoarding","kind","User","keyHash","Peer","whoami","publicKey","secretKey","a","createElement","href","URL","createObjectURL","Blob","stringify","download","click","revokeObjectURL","PrivateRoute","Component","component","rest","render","clear","to","pathname","state","App","path","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.583a2fa4.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n    Box,\r\n    Button,\r\n    Card,\r\n    Field,\r\n    Heading,\r\n    Input,\r\n    Link,\r\n    Text,\r\n} from \"rimble-ui\";\r\nfunction AuthPage() {\r\n    if (sessionStorage[\"whoami\"]) window.location.hash = \"#/\";\r\n    function keyUpload(event) {\r\n        const file = event.nativeEvent.srcElement.files[0];\r\n        const reader = new FileReader();\r\n        reader.onload = function (e) {\r\n            sessionStorage.setItem(\"file\", e.target.result);\r\n            sessionStorage.setItem(\"kind\", 0);\r\n            window.location.hash = \"#/setup\";\r\n        };\r\n        reader.readAsText(file);\r\n    }\r\n    const [value, setValue] = useState(\"\");\r\n    const [page, setPage] = useState(1);\r\n    return (\r\n        <div className=\"main__class\">\r\n            <Card\r\n                width={\"auto\"}\r\n                mx={\"auto\"}\r\n                my={\"auto\"}\r\n                maxWidth={\"420px\"}\r\n                bg={\"#2c2c2c\"}\r\n                color={\"white\"}\r\n                border={0}\r\n                p={4}\r\n                style={{ boxShadow: \"9px 9px 8px rgb(0 0 0)\" }}\r\n            >\r\n                {page === 0 && (\r\n                    <React.Fragment>\r\n                        <Heading>Log In to Meschain</Heading>\r\n                        <Text.p>\r\n                            If you have your keys with you go ahead and upload\r\n                            them\r\n                        </Text.p>\r\n                        <Box\r\n                            mx={\"auto\"}\r\n                            style={{\r\n                                display: \"flex\",\r\n                                justifyContent: \"center\",\r\n                            }}\r\n                        >\r\n                            <Field label=\"Your key file\">\r\n                                <Input\r\n                                    type=\"file\"\r\n                                    required={true}\r\n                                    accept=\".meschain\"\r\n                                    placeholder=\"Keys\"\r\n                                    onChange={keyUpload}\r\n                                />\r\n                            </Field>\r\n                        </Box>\r\n                        <Text.p style={{ fontStyle: \"italic\" }}>\r\n                            Don't have keys? Get new one{\" \"}\r\n                            <Link\r\n                                title=\"Click here to signup\"\r\n                                onClick={() => setPage(1)}\r\n                            >\r\n                                here.\r\n                            </Link>\r\n                        </Text.p>\r\n                    </React.Fragment>\r\n                )}\r\n                {page === 1 && (\r\n                    <React.Fragment>\r\n                        <Heading>SignUp for Meschain</Heading>\r\n                        <Text.p>\r\n                            No need for email or mobile. Just enter a name as\r\n                            you like.\r\n                        </Text.p>\r\n                        <Box mx={\"auto\"}>\r\n                            <Field label=\"Your Name\" style={{ width: \"100%\" }}>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    style={{ width: \"100%\" }}\r\n                                    value={value}\r\n                                    onChange={(e) => setValue(e.target.value)}\r\n                                    placeholder=\"eg. Superman\"\r\n                                />\r\n                            </Field>\r\n                            <Button\r\n                                icon=\"ArrowForward\"\r\n                                iconpos=\"right\"\r\n                                onClick={() => {\r\n                                    sessionStorage.setItem(\"user\", value);\r\n                                    sessionStorage.setItem(\"kind\", 1);\r\n                                    window.location.hash = \"#/setup\";\r\n                                }}\r\n                            >\r\n                                Lets go\r\n                            </Button>\r\n                        </Box>\r\n                        <Text.p style={{ fontStyle: \"italic\" }}>\r\n                            Already have keys? Log In{\" \"}\r\n                            <Link\r\n                                title=\"Click here to login\"\r\n                                onClick={() => setPage(0)}\r\n                            >\r\n                                here.\r\n                            </Link>\r\n                        </Text.p>\r\n                    </React.Fragment>\r\n                )}\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AuthPage;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n    Blockie,\r\n    Box,\r\n    Button,\r\n    EthAddress,\r\n    Field,\r\n    Form,\r\n    Heading,\r\n    Input,\r\n    Text,\r\n} from \"rimble-ui\";\r\n\r\nfunction ChatHistory(props) {\r\n    const randomColor = () =>\r\n        `#${Math.floor(Math.random() * 16777215).toString(16)}`;\r\n    const [toggle, setToggle] = useState(false);\r\n    const [friend, setFriend] = useState(\"\");\r\n    useEffect(() => {\r\n        window.peer.identity.subscribe((e) => {\r\n            try {\r\n                localStorage.setItem(JSON.parse(e).from, e);\r\n            } catch {}\r\n        });\r\n    }, []);\r\n\r\n    function newFriend(event) {\r\n        event.preventDefault();\r\n        try {\r\n            if (!localStorage.getItem(friend))\r\n                window.peer.privateMSG(undefined, friend, \"WHO\");\r\n        } catch {\r\n            alert(\"INvald ID\");\r\n        }\r\n        setFriend(\"\");\r\n    }\r\n    function hideLogs() {\r\n        setToggle(!toggle);\r\n        if (toggle) {\r\n            document.querySelector(\".logs\").style = \"\";\r\n            document.querySelector(\".chats\").style = \"\";\r\n            document.querySelector(\".chats\").children[0].style = \"\";\r\n            document.querySelector(\".chats\").children[1].style = \"\";\r\n        } else {\r\n            document.querySelector(\".logs\").style = \"display: none\";\r\n            document.querySelector(\".chats\").style = \"width: 100%\";\r\n            document.querySelector(\".chats\").children[0].style = \"width: 35%\";\r\n            document.querySelector(\".chats\").children[1].style = \"width: 65%\";\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <Box\r\n                bg={\"#2f3136\"}\r\n                p={2}\r\n                style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"space-between\",\r\n                    alignItems: \"center\",\r\n                }}\r\n            >\r\n                <Blockie\r\n                    style={{ borderRadius: \"50%\" }}\r\n                    opts={{\r\n                        seed: sessionStorage[\"whoami\"],\r\n                        color: randomColor(),\r\n                        bgcolor: randomColor(),\r\n                        spotcolor: randomColor(),\r\n                    }}\r\n                />\r\n                <Heading.h6 style={{ margin: 0 }}>\r\n                    Chats of {window.user.userInfo.username || \"Anonymous\"}\r\n                </Heading.h6>\r\n                <span style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                    <Button.Text\r\n                        icon=\"Info\"\r\n                        icononly={true}\r\n                        size=\"small\"\r\n                        title=\"Stats for Nerds\"\r\n                        mr={2}\r\n                        className=\"logsBTN\"\r\n                        onClick={hideLogs}\r\n                        style={{ color: \"#ffffff\" }}\r\n                    />\r\n                    <Button\r\n                        icon=\"PowerSettingsNew\"\r\n                        size=\"small\"\r\n                        iconpos=\"right\"\r\n                        onClick={() => window.location.reload()}\r\n                    >\r\n                        Log Out\r\n                    </Button>\r\n                </span>\r\n            </Box>\r\n            <Box p={2} bg={\"#36393f\"}>\r\n                <Text fontSize=\"1\">Your Meschain Address</Text>\r\n                <EthAddress\r\n                    address={sessionStorage[\"whoami\"]}\r\n                    className=\"hideQR\"\r\n                />\r\n            </Box>\r\n            <Box p={2} bg={\"#2f3136\"}>\r\n                <Form className=\"fullWidth\">\r\n                    <Field label=\"Your Friends Meschain Address\">\r\n                        <Input\r\n                            type=\"text\"\r\n                            placeholder=\"Ask your friend to share their address\"\r\n                            style={{ width: \"100%\" }}\r\n                            required={true}\r\n                            value={friend}\r\n                            onChange={(e) => setFriend(e.target.value)}\r\n                        />\r\n                    </Field>\r\n                    <Button\r\n                        icon=\"Add\"\r\n                        icononly={true}\r\n                        ml={2}\r\n                        onClick={newFriend}\r\n                    ></Button>\r\n                </Form>\r\n            </Box>\r\n            <Box\r\n                p={2}\r\n                bg={\"#46484b\"}\r\n                style={{ height: \"100%\", overflowY: \"auto\" }}\r\n            >\r\n                <li>Chats from blockchain</li>\r\n                <li>Chats from blockchain</li>\r\n                <li>Chats from blockchain</li>\r\n                <li>Chats from blockchain</li>\r\n                <li>Chats from blockchain</li>\r\n                <li>Chats from blockchain</li>\r\n                <li>Chats from blockchain</li>\r\n                <li>Chats from blockchain</li>\r\n                <li>Chats from blockchain</li>\r\n                <li>Chats from blockchain</li>\r\n                <li>Chats from blockchain</li>\r\n                <li>Chats from blockchain</li>\r\n                <li>Chats from blockchain</li>\r\n                <li>Chats from blockchain</li>\r\n                <li>Chats from blockchain</li>\r\n                <li>Chats from blockchain</li>\r\n                <li>Chats from blockchain</li>\r\n                <li>Chats from blockchain</li>\r\n                <li>Chats from blockchain</li>\r\n                <li>Chats from blockchain</li>\r\n                <li>Chats from blockchain</li>\r\n                <li>Chats from blockchain</li>\r\n                <li>Chats from blockchain</li>\r\n                <li>Chats from blockchain</li>\r\n                <li>Chats from blockchain</li>\r\n                <li>Chats from blockchain</li>\r\n            </Box>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChatHistory;\r\n","export default __webpack_public_path__ + \"static/media/nochat.0f4e4e0d.png\";","import React, { useState, useEffect } from \"react\";\r\nimport { Box, Text, Heading } from \"rimble-ui\";\r\nimport NoMsg from \"../../assets/nochat.png\";\r\nfunction ChatPage(props) {\r\n    const [conn, setConn] = useState(0);\r\n    useEffect(() => {\r\n        window.peer.numConnections.subscribe((e) => setConn(e));\r\n    }, [conn]);\r\n\r\n    return (\r\n        <div className=\"hideChat\">\r\n            <Box p={2} style={{ height: \"100%\" }} color=\"#ffffff\">\r\n                {!props.curr && (\r\n                    <React.Fragment>\r\n                        <div\r\n                            style={{\r\n                                display: \"flex\",\r\n                                alignItems: \"center\",\r\n                                justifyContent: \"center\",\r\n                                height: \"inherit\",\r\n                            }}\r\n                        >\r\n                            <span\r\n                                style={{\r\n                                    display: \"flex\",\r\n                                    alignItems: \"center\",\r\n                                    justifyContent: \"center\",\r\n                                    flexDirection: \"column\",\r\n                                    gap: \"0.5rem\",\r\n                                }}\r\n                            >\r\n                                <img src={NoMsg} width=\"200\" />\r\n                                <Heading.h4 my={1}>\r\n                                    It's always nice to chat with to someone\r\n                                </Heading.h4>\r\n                                <Text my={0}>\r\n                                    Pick a chat from the left menu, or add your\r\n                                    friends to start a new chat.\r\n                                </Text>\r\n                                <Text my={1}>\r\n                                    By the way you're currently directly\r\n                                    connected to <b>{conn}</b> users.\r\n                                </Text>\r\n                                <small\r\n                                    style={{ marginTop: \"2rem\", width: \"60%\" }}\r\n                                >\r\n                                    All your messages are always end-to-end\r\n                                    encrypted to never go to any server.\r\n                                    Everything happens on a blockchain powered\r\n                                    by people like you. <wbr /> Meschain is\r\n                                    built on top of blockchain where all the\r\n                                    users compete to add your new message to the\r\n                                    blockchain. Note that once you've sent a\r\n                                    message it is for forever no one (not even\r\n                                    you) can alter or delete it.\r\n                                </small>\r\n                            </span>\r\n                        </div>\r\n                    </React.Fragment>\r\n                )}\r\n                {props.curr && <React.Fragment>{props.curr}</React.Fragment>}\r\n            </Box>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChatPage;\r\n","import React, { useState } from \"react\";\r\nimport ChatHistory from \"./chatHistory\";\r\nimport ChatPage from \"./ChatPage\";\r\n\r\nfunction HomePage() {\r\n    const [currChat, setCurrChat] = useState(undefined);\r\n    return (\r\n        <div className=\"home\">\r\n            <div className=\"chats\">\r\n                <ChatHistory set={setCurrChat} />\r\n                <ChatPage curr={currChat} />\r\n            </div>\r\n            <div className=\"logs\"></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HomePage;\r\n","import React, { useEffect } from \"react\";\r\nimport { Button, Card, Heading, Text, Box } from \"rimble-ui\";\r\nfunction OnBoarding() {\r\n    const kind = sessionStorage[\"kind\"];\r\n    useEffect(() => {\r\n        if (!kind) window.location.hash = \"#/auth\";\r\n        if (kind === \"1\") {\r\n            window.user = new window.User(null, null, sessionStorage[\"user\"]);\r\n            sessionStorage.setItem(\"whoami\", window.user.keyHash);\r\n            window.peer = new window.Peer(\r\n                window.user.keyHash,\r\n                window.user.whoami\r\n            );\r\n        }\r\n        if (kind === \"0\") {\r\n            const file = sessionStorage[\"file\"];\r\n            if (!file) window.location.hash = \"#/auth\";\r\n            window.user = new window.User(\r\n                JSON.parse(file).publicKey,\r\n                JSON.parse(file).secretKey,\r\n                JSON.parse(file).username\r\n            );\r\n            window.peer = new window.Peer(\r\n                window.user.keyHash,\r\n                window.user.whoami\r\n            );\r\n            if (window.user.keyHash !== JSON.parse(file).keyHash)\r\n                window.location.hash = \"#/auth\";\r\n            sessionStorage.setItem(\"whoami\", window.user.keyHash);\r\n            window.location.hash = \"#/\";\r\n        }\r\n    }, []);\r\n\r\n    function downloadKEY() {\r\n        const a = document.createElement(\"a\");\r\n        a.href = window.URL.createObjectURL(\r\n            new Blob([JSON.stringify(window.user.userInfo)], {\r\n                type: \"meschain\",\r\n            })\r\n        );\r\n        a.download = \"key.meschain\";\r\n        a.click();\r\n        window.URL.revokeObjectURL(a.href);\r\n    }\r\n    return (\r\n        <div className=\"main__class\">\r\n            <Card\r\n                width={\"auto\"}\r\n                mx={\"auto\"}\r\n                my={\"auto\"}\r\n                maxWidth={\"420px\"}\r\n                bg={\"#2c2c2c\"}\r\n                color={\"white\"}\r\n                border={0}\r\n                p={4}\r\n                style={{ boxShadow: \"9px 9px 8px rgb(0 0 0)\" }}\r\n            >\r\n                {kind === \"1\" && (\r\n                    <React.Fragment>\r\n                        <Heading>Hang On</Heading>\r\n                        <Text.p>\r\n                            Download your keys and keep them at a safe private\r\n                            place.\r\n                        </Text.p>\r\n                        <Box\r\n                            style={{\r\n                                display: \"flex\",\r\n                                justifyContent: \"center\",\r\n                            }}\r\n                        >\r\n                            <Button.Text\r\n                                icon=\"ArrowForward\"\r\n                                iconpos=\"right\"\r\n                                style={{ color: \"#ffffff\" }}\r\n                                onClick={() => (window.location.hash = \"#/\")}\r\n                            >\r\n                                Continue\r\n                            </Button.Text>\r\n                            <Button mx={4} onClick={downloadKEY}>\r\n                                Download\r\n                            </Button>\r\n                        </Box>\r\n                        <Text.p style={{ fontStyle: \"italic\" }}>\r\n                            If you loose this key their is no way of accessing\r\n                            your messages again.\r\n                        </Text.p>\r\n                    </React.Fragment>\r\n                )}\r\n                {kind === \"0\" && (\r\n                    <React.Fragment>\r\n                        <Heading>Hang On</Heading>\r\n                        <Text.p>\r\n                            Just a moment. We're preparing your chats.\r\n                        </Text.p>\r\n                        <Text.p style={{ fontStyle: \"italic\" }}>\r\n                            You'll be redirected automatically\r\n                        </Text.p>\r\n                    </React.Fragment>\r\n                )}\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default OnBoarding;\r\n","import React from \"react\";\r\nimport {\r\n    HashRouter as Router,\r\n    Route,\r\n    Switch,\r\n    Redirect,\r\n} from \"react-router-dom\";\r\nimport AuthPage from \"./components/AuthPage/index\";\r\nimport HomePage from \"./components/HomePage/index\";\r\nimport OnBoarding from \"./components/OnBoarding\";\r\nfunction App() {\r\n    return (\r\n        <Router>\r\n            <Switch>\r\n                <Route path=\"/auth\" component={AuthPage} />\r\n                <Route path=\"/setup\" component={OnBoarding} />\r\n                <PrivateRoute path=\"/\" component={HomePage} />\r\n            </Switch>\r\n        </Router>\r\n    );\r\n}\r\nfunction authGuard() {\r\n    if (!sessionStorage[\"whoami\"]) return false;\r\n    if (!window.user) {\r\n        sessionStorage.clear();\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\nfunction PrivateRoute({ component: Component, ...rest }) {\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={(props) =>\r\n                authGuard() === true ? (\r\n                    <Component {...props} />\r\n                ) : (\r\n                    <Redirect\r\n                        to={{\r\n                            pathname: \"/auth\",\r\n                            state: { from: props.location },\r\n                        }}\r\n                    />\r\n                )\r\n            }\r\n        />\r\n    );\r\n}\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}