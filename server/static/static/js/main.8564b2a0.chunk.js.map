{"version":3,"sources":["components/AuthPage/index.js","components/HomePage/ChatHistoryItem.js","components/HomePage/chatHistory.js","assets/nochat.png","components/HomePage/Message.js","components/HomePage/UserInfo.js","components/HomePage/ChatPage.js","components/HomePage/index.js","components/OnBoarding/index.js","App.js","index.js"],"names":["AuthPage","sessionStorage","window","location","hash","useState","value","setValue","page","setPage","className","Card","width","mx","my","maxWidth","bg","color","border","p","style","boxShadow","Fragment","Heading","Text","Box","display","justifyContent","Field","label","Input","type","required","accept","placeholder","onChange","event","file","nativeEvent","srcElement","files","reader","FileReader","onload","e","setItem","target","result","readAsText","fontStyle","Link","title","onClick","Button","icon","iconpos","randomColor","Math","floor","random","toString","ChatHistoryItem","address","lastText","name","handler","ref","useRef","borderBottom","padding","blockie","current","canvas","toDataURL","Blockie","borderRadius","opts","seed","bgcolor","spotcolor","fontWeight","ChatHistory","set","toggle","setToggle","friend","setFriend","useEffect","peer","identity","subscribe","localStorage","JSON","parse","from","alignItems","h6","margin","user","userInfo","username","icononly","size","mr","document","querySelector","children","reload","fontSize","EthAddress","Form","ml","preventDefault","getItem","privateMSG","undefined","toastProvider","addMessage","secondaryMessage","colorTheme","variant","height","overflowY","ToastMessage","Provider","node","Message","message","time","sent","marginBottom","classList","contains","UserInfo","addr","console","log","setTimeout","Avatar","src","ChatPage","curr","conn","setConn","numConnections","flexDirection","gap","NoMsg","h4","marginTop","class","transform","Outline","HomePage","currChat","setCurrChat","OnBoarding","kind","User","keyHash","Peer","whoami","publicKey","secretKey","a","createElement","href","URL","createObjectURL","Blob","stringify","download","click","revokeObjectURL","PrivateRoute","Component","component","rest","render","props","clear","to","pathname","state","App","path","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.8564b2a0.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n    Box,\r\n    Button,\r\n    Card,\r\n    Field,\r\n    Heading,\r\n    Input,\r\n    Link,\r\n    Text,\r\n} from \"rimble-ui\";\r\nfunction AuthPage() {\r\n    if (sessionStorage[\"whoami\"]) window.location.hash = \"#/\";\r\n    function keyUpload(event) {\r\n        const file = event.nativeEvent.srcElement.files[0];\r\n        const reader = new FileReader();\r\n        reader.onload = function (e) {\r\n            sessionStorage.setItem(\"file\", e.target.result);\r\n            sessionStorage.setItem(\"kind\", 0);\r\n            window.location.hash = \"#/setup\";\r\n        };\r\n        reader.readAsText(file);\r\n    }\r\n    const [value, setValue] = useState(\"\");\r\n    const [page, setPage] = useState(1);\r\n    return (\r\n        <div className=\"main__class\">\r\n            <Card\r\n                width={\"auto\"}\r\n                mx={\"auto\"}\r\n                my={\"auto\"}\r\n                maxWidth={\"420px\"}\r\n                bg={\"#2c2c2c\"}\r\n                color={\"white\"}\r\n                border={0}\r\n                p={4}\r\n                style={{ boxShadow: \"9px 9px 8px rgb(0 0 0)\" }}\r\n            >\r\n                {page === 0 && (\r\n                    <React.Fragment>\r\n                        <Heading>Log In to Meschain</Heading>\r\n                        <Text.p>\r\n                            If you have your keys with you go ahead and upload\r\n                            them\r\n                        </Text.p>\r\n                        <Box\r\n                            mx={\"auto\"}\r\n                            style={{\r\n                                display: \"flex\",\r\n                                justifyContent: \"center\",\r\n                            }}\r\n                        >\r\n                            <Field label=\"Your key file\">\r\n                                <Input\r\n                                    type=\"file\"\r\n                                    required={true}\r\n                                    accept=\".meschain\"\r\n                                    placeholder=\"Keys\"\r\n                                    onChange={keyUpload}\r\n                                />\r\n                            </Field>\r\n                        </Box>\r\n                        <Text.p style={{ fontStyle: \"italic\" }}>\r\n                            Don't have keys? Get new one{\" \"}\r\n                            <Link\r\n                                title=\"Click here to signup\"\r\n                                onClick={() => setPage(1)}\r\n                            >\r\n                                here.\r\n                            </Link>\r\n                        </Text.p>\r\n                    </React.Fragment>\r\n                )}\r\n                {page === 1 && (\r\n                    <React.Fragment>\r\n                        <Heading>SignUp for Meschain</Heading>\r\n                        <Text.p>\r\n                            No need for email or mobile. Just enter a name as\r\n                            you like.\r\n                        </Text.p>\r\n                        <Box mx={\"auto\"}>\r\n                            <Field label=\"Your Name\" style={{ width: \"100%\" }}>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    style={{ width: \"100%\" }}\r\n                                    value={value}\r\n                                    onChange={(e) => setValue(e.target.value)}\r\n                                    placeholder=\"eg. Superman\"\r\n                                />\r\n                            </Field>\r\n                            <Button\r\n                                icon=\"ArrowForward\"\r\n                                iconpos=\"right\"\r\n                                onClick={() => {\r\n                                    sessionStorage.setItem(\"user\", value);\r\n                                    sessionStorage.setItem(\"kind\", 1);\r\n                                    window.location.hash = \"#/setup\";\r\n                                }}\r\n                            >\r\n                                Lets go\r\n                            </Button>\r\n                        </Box>\r\n                        <Text.p style={{ fontStyle: \"italic\" }}>\r\n                            Already have keys? Log In{\" \"}\r\n                            <Link\r\n                                title=\"Click here to login\"\r\n                                onClick={() => setPage(0)}\r\n                            >\r\n                                here.\r\n                            </Link>\r\n                        </Text.p>\r\n                    </React.Fragment>\r\n                )}\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AuthPage;\r\n","import React, { useRef } from \"react\";\r\nimport { Blockie, Box, Text } from \"rimble-ui\";\r\nconst randomColor = () =>\r\n    `#${Math.floor(Math.random() * 16777215).toString(16)}`;\r\nfunction ChatHistoryItem({ address, lastText, name, handler }) {\r\n    const ref = useRef();\r\n    return (\r\n        <Box\r\n            style={{\r\n                display: \"flex\",\r\n                borderBottom: \"1px solid #ded7d7\",\r\n                padding: \"10px\",\r\n            }}\r\n            onClick={() =>\r\n                handler({\r\n                    address: address,\r\n                    blockie: ref.current.canvas.toDataURL(),\r\n                })\r\n            }\r\n        >\r\n            <Blockie\r\n                style={{ borderRadius: \"50%\" }}\r\n                opts={{\r\n                    seed: address,\r\n                    color: randomColor(),\r\n                    bgcolor: randomColor(),\r\n                    spotcolor: randomColor(),\r\n                }}\r\n                ref={ref}\r\n            />\r\n            <span className=\"d-flex flex-column pl-2\">\r\n                <Text fontWeight={\"bold\"} p={0}>\r\n                    {name}\r\n                </Text>\r\n                <small>{lastText}</small>\r\n            </span>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default ChatHistoryItem;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n    Blockie,\r\n    Box,\r\n    Button,\r\n    EthAddress,\r\n    Field,\r\n    Form,\r\n    Heading,\r\n    Input,\r\n    Text,\r\n    ToastMessage,\r\n} from \"rimble-ui\";\r\nimport ChatHistoryItem from \"./ChatHistoryItem\";\r\n\r\nfunction ChatHistory({ set }) {\r\n    const randomColor = () =>\r\n        `#${Math.floor(Math.random() * 16777215).toString(16)}`;\r\n    const [toggle, setToggle] = useState(false);\r\n    const [friend, setFriend] = useState(\"\");\r\n    useEffect(() => {\r\n        window.peer.identity.subscribe((e) => {\r\n            try {\r\n                localStorage.setItem(JSON.parse(e).from, e);\r\n                set(JSON.parse(e).from);\r\n            } catch {}\r\n        });\r\n    }, []);\r\n\r\n    function newFriend(event) {\r\n        event.preventDefault();\r\n        try {\r\n            if (!localStorage.getItem(friend))\r\n                window.peer.privateMSG(undefined, friend, \"WHO\");\r\n            else {\r\n                set(friend);\r\n            }\r\n        } catch {\r\n            window.toastProvider.addMessage(\r\n                \"Couldn't connect to your friend 😌\",\r\n                {\r\n                    secondaryMessage:\r\n                        \"May be you entered a wrong address or they are offline\",\r\n                    colorTheme: \"light\",\r\n                    variant: \"failure\",\r\n                }\r\n            );\r\n        }\r\n        setFriend(\"\");\r\n    }\r\n    function hideLogs() {\r\n        setToggle(!toggle);\r\n        if (toggle) {\r\n            document.querySelector(\".logs\").style = \"\";\r\n            document.querySelector(\".chats\").style = \"\";\r\n            document.querySelector(\".chats\").children[0].style = \"\";\r\n            document.querySelector(\".chats\").children[1].style = \"\";\r\n        } else {\r\n            document.querySelector(\".logs\").style = \"display: none\";\r\n            document.querySelector(\".chats\").style = \"width: 100%\";\r\n            document.querySelector(\".chats\").children[0].style = \"width: 35%\";\r\n            document.querySelector(\".chats\").children[1].style = \"width: 65%\";\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <Box\r\n                bg={\"#2f3136\"}\r\n                p={2}\r\n                style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"space-between\",\r\n                    alignItems: \"center\",\r\n                }}\r\n            >\r\n                <Blockie\r\n                    style={{ borderRadius: \"50%\" }}\r\n                    opts={{\r\n                        seed: sessionStorage[\"whoami\"],\r\n                        color: randomColor(),\r\n                        bgcolor: randomColor(),\r\n                        spotcolor: randomColor(),\r\n                    }}\r\n                />\r\n\r\n                <Heading.h6 style={{ margin: 0 }}>\r\n                    Chats of {window.user.userInfo.username || \"Anonymous\"}\r\n                </Heading.h6>\r\n                <span style={{ display: \"flex\", alignItems: \"center\" }}>\r\n                    <Button.Text\r\n                        icon=\"Info\"\r\n                        icononly={true}\r\n                        size=\"small\"\r\n                        title=\"Stats for Nerds\"\r\n                        mr={2}\r\n                        className=\"logsBTN\"\r\n                        onClick={hideLogs}\r\n                        style={{ color: \"#ffffff\" }}\r\n                    />\r\n                    <Button\r\n                        icon=\"PowerSettingsNew\"\r\n                        size=\"small\"\r\n                        iconpos=\"right\"\r\n                        onClick={() => window.location.reload()}\r\n                    >\r\n                        Log Out\r\n                    </Button>\r\n                </span>\r\n            </Box>\r\n            <Box p={2} bg={\"#36393f\"}>\r\n                <Text fontSize=\"1\">Your Meschain Address</Text>\r\n                <EthAddress\r\n                    address={sessionStorage[\"whoami\"]}\r\n                    className=\"hideQR\"\r\n                />\r\n            </Box>\r\n            <Box p={2} bg={\"#2f3136\"}>\r\n                <Form className=\"fullWidth\">\r\n                    <Field label=\"Your Friends Meschain Address\">\r\n                        <Input\r\n                            type=\"text\"\r\n                            placeholder=\"Ask your friend to share their address\"\r\n                            style={{ width: \"100%\" }}\r\n                            required={true}\r\n                            value={friend}\r\n                            onChange={(e) => setFriend(e.target.value)}\r\n                        />\r\n                    </Field>\r\n                    <Button\r\n                        icon=\"Add\"\r\n                        icononly={true}\r\n                        ml={2}\r\n                        onClick={newFriend}\r\n                    ></Button>\r\n                </Form>\r\n            </Box>\r\n            <Box bg={\"#46484b\"} style={{ height: \"100%\", overflowY: \"auto\" }}>\r\n                <ChatHistoryItem\r\n                    name=\"Anurag Verma\"\r\n                    lastText=\"Hi, what's up?\"\r\n                    address=\"0xa8f3bc6f5cdd3bfa00a538d11bed3ad3ea8c47005df4e0e05b8319d818ece8bf\"\r\n                    handler={set}\r\n                />\r\n                <ChatHistoryItem\r\n                    name=\"Antra Verma\"\r\n                    lastText=\"Good Night! 😀\"\r\n                    address=\"0xa984b008e292ef2c2993635f4fbb794b6f3366bc30c845f4581308c31b63fa4f\"\r\n                    handler={set}\r\n                />\r\n            </Box>\r\n            <>\r\n                <ToastMessage.Provider\r\n                    ref={(node) => (window.toastProvider = node)}\r\n                />\r\n            </>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChatHistory;\r\n","export default __webpack_public_path__ + \"static/media/nochat.0f4e4e0d.png\";","import React, { useRef } from \"react\";\r\n\r\nfunction Message({ message, time, sent }) {\r\n    const ref = useRef();\r\n    const handleTime = () => {\r\n        if (ref.current.children[0].children[0].classList.contains(\"d-none\"))\r\n            ref.current.style.marginBottom = \"15px\";\r\n        else ref.current.style.marginBottom = \"4px\";\r\n        ref.current.children[0].children[0].classList.toggle(\"d-none\");\r\n    };\r\n    return (\r\n        <div\r\n            className={\r\n                sent\r\n                    ? \"d-flex justify-content-end anim\"\r\n                    : \"d-flex justify-content-start anim\"\r\n            }\r\n            style={{\r\n                marginBottom: \"4px\",\r\n            }}\r\n            ref={ref}\r\n            onClick={handleTime}\r\n        >\r\n            <div className={sent ? \"msg_cotainer\" : \"msg_cotainer_send\"}>\r\n                {message}\r\n                <span\r\n                    className={\r\n                        sent ? \"msg_time d-none\" : \"msg_time_send d-none\"\r\n                    }\r\n                >\r\n                    {time}\r\n                </span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Message;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Avatar, Text, Blockie } from \"rimble-ui\";\r\nfunction UserInfo({ addr }) {\r\n    const randomColor = () =>\r\n        `#${Math.floor(Math.random() * 16777215).toString(16)}`;\r\n    const [name, setName] = useState(\"Anonymous Panda\");\r\n\r\n    useEffect(() => {\r\n        console.log(\"Update\");\r\n        setTimeout(() => {\r\n            // Returns NULL sometimes fix this...\r\n            localStorage.getItem(addr.address);\r\n        }, 2500);\r\n    }, [addr.address]);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            {addr.blockie && <Avatar src={addr.blockie} size=\"45px\" />}\r\n            {!addr.blockie && (\r\n                <Blockie\r\n                    style={{ borderRadius: \"50%\" }}\r\n                    opts={{\r\n                        seed: addr.address,\r\n                        color: randomColor(),\r\n                        bgcolor: randomColor(),\r\n                        spotcolor: randomColor(),\r\n                    }}\r\n                />\r\n            )}\r\n            <Text p={2}>{name || \"Anonymous Panda\"}</Text>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default UserInfo;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Box, Text, Heading, Blockie, Input, Button } from \"rimble-ui\";\r\nimport NoMsg from \"../../assets/nochat.png\";\r\nimport Message from \"./Message\";\r\nimport UserInfo from \"./UserInfo\";\r\nfunction ChatPage({ curr }) {\r\n    const [conn, setConn] = useState(0);\r\n    const randomColor = () =>\r\n        `#${Math.floor(Math.random() * 16777215).toString(16)}`;\r\n    useEffect(() => {\r\n        window.peer.numConnections.subscribe((e) => setConn(e));\r\n    }, [conn]);\r\n    return (\r\n        <div className=\"hideChat\">\r\n            <Box style={{ height: \"100%\" }} color=\"#ffffff\">\r\n                {!curr && (\r\n                    <React.Fragment>\r\n                        <div\r\n                            style={{\r\n                                display: \"flex\",\r\n                                alignItems: \"center\",\r\n                                justifyContent: \"center\",\r\n                                height: \"inherit\",\r\n                            }}\r\n                        >\r\n                            <span\r\n                                style={{\r\n                                    display: \"flex\",\r\n                                    alignItems: \"center\",\r\n                                    justifyContent: \"center\",\r\n                                    flexDirection: \"column\",\r\n                                    gap: \"0.5rem\",\r\n                                }}\r\n                            >\r\n                                <img src={NoMsg} width=\"200\" />\r\n                                <Heading.h4 my={1}>\r\n                                    It's always nice to chat with to someone\r\n                                </Heading.h4>\r\n                                <Text my={0}>\r\n                                    Pick a chat from the left menu, or add your\r\n                                    friends to start a new chat.\r\n                                </Text>\r\n                                <Text my={1}>\r\n                                    By the way you're currently directly\r\n                                    connected to <b>{conn}</b> users.\r\n                                </Text>\r\n                                <small\r\n                                    style={{\r\n                                        marginTop: \"2rem\",\r\n                                        width: \"60%\",\r\n                                    }}\r\n                                >\r\n                                    All your messages are always end-to-end\r\n                                    encrypted to never go to any server.\r\n                                    Everything happens on a blockchain powered\r\n                                    by people like you. <wbr /> Meschain is\r\n                                    built on top of blockchain where all the\r\n                                    users compete to add your new message to the\r\n                                    blockchain. Note that once you've sent a\r\n                                    message it is for forever no one (not even\r\n                                    you) can alter or delete it.\r\n                                </small>\r\n                            </span>\r\n                        </div>\r\n                    </React.Fragment>\r\n                )}\r\n                {curr && (\r\n                    <React.Fragment>\r\n                        <Box\r\n                            bg={\"#4a4a4a\"}\r\n                            p={2}\r\n                            style={{\r\n                                display: \"flex\",\r\n                                alignItems: \"center\",\r\n                            }}\r\n                        >\r\n                            <UserInfo addr={curr} />\r\n                        </Box>\r\n                        <div>\r\n                            <div class=\"card-body msg_card_body\">\r\n                                <div\r\n                                    style={{\r\n                                        display: \"flex\",\r\n                                        \"justify-content\": \"center\",\r\n                                        transform: \"scale(0.8)\",\r\n                                    }}\r\n                                >\r\n                                    <Button\r\n                                        size=\"small\"\r\n                                        mr={3}\r\n                                        style={{\r\n                                            \"background-color\": \"a7a7ad\",\r\n                                        }}\r\n                                    >\r\n                                        Today\r\n                                    </Button>\r\n                                </div>\r\n                                <Message\r\n                                    message=\"Hellow!\"\r\n                                    time=\"10:20AM\"\r\n                                    sent={true}\r\n                                />\r\n                                <Message\r\n                                    message=\"Hellow Lisfgoaif skdhfoisdg sghio!\"\r\n                                    time=\"10:20AM\"\r\n                                    sent={false}\r\n                                />\r\n                                <Message\r\n                                    message=\"Hellow!\"\r\n                                    time=\"10:20AM\"\r\n                                    sent={true}\r\n                                />\r\n                                <Message\r\n                                    message=\"Hellow!\"\r\n                                    time=\"10:20AM\"\r\n                                    sent={true}\r\n                                />\r\n                            </div>\r\n                            <div\r\n                                style={{\r\n                                    display: \"flex\",\r\n                                    alignItems: \"center\",\r\n                                }}\r\n                            >\r\n                                <Button.Outline\r\n                                    icon=\"Attachment\"\r\n                                    icononly\r\n                                    style={{\r\n                                        \"border-bottom-right-radius\": 0,\r\n                                        \"border-top-right-radius\": 0,\r\n                                        \"background-color\": \"#ffffff\",\r\n                                        \"margin-right\": 0,\r\n                                        \"margin-left\": 25,\r\n                                    }}\r\n                                ></Button.Outline>\r\n                                <Input\r\n                                    type=\"text\"\r\n                                    required={true}\r\n                                    placeholder=\"Type your message...\"\r\n                                    style={{\r\n                                        width: \"60vw\",\r\n                                        margin: \"5px 0px\",\r\n                                        \"border-radius\": 0,\r\n                                    }}\r\n                                />\r\n                                <Button\r\n                                    icon=\"Send\"\r\n                                    icononly\r\n                                    style={{\r\n                                        \"margin-right\": \"30px\",\r\n                                        \"border-top-left-radius\": 0,\r\n                                        \"border-bottom-left-radius\": 0,\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </React.Fragment>\r\n                )}\r\n            </Box>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChatPage;\r\n","import React, { useState } from \"react\";\r\nimport ChatHistory from \"./chatHistory\";\r\nimport ChatPage from \"./ChatPage\";\r\n\r\nfunction HomePage() {\r\n    const [currChat, setCurrChat] = useState(undefined);\r\n    return (\r\n        <div className=\"home\">\r\n            <div className=\"chats\">\r\n                <ChatHistory set={setCurrChat} />\r\n                <ChatPage curr={currChat} />\r\n            </div>\r\n            <div className=\"logs\"></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HomePage;\r\n","import React, { useEffect } from \"react\";\r\nimport { Button, Card, Heading, Text, Box } from \"rimble-ui\";\r\nfunction OnBoarding() {\r\n    const kind = sessionStorage[\"kind\"];\r\n    useEffect(() => {\r\n        if (!kind) window.location.hash = \"#/auth\";\r\n        if (kind === \"1\") {\r\n            window.user = new window.User(null, null, sessionStorage[\"user\"]);\r\n            sessionStorage.setItem(\"whoami\", window.user.keyHash);\r\n            window.peer = new window.Peer(\r\n                window.user.keyHash,\r\n                window.user.whoami\r\n            );\r\n        }\r\n        if (kind === \"0\") {\r\n            const file = sessionStorage[\"file\"];\r\n            if (!file) window.location.hash = \"#/auth\";\r\n            window.user = new window.User(\r\n                JSON.parse(file).publicKey,\r\n                JSON.parse(file).secretKey,\r\n                JSON.parse(file).username\r\n            );\r\n            window.peer = new window.Peer(\r\n                window.user.keyHash,\r\n                window.user.whoami\r\n            );\r\n            if (window.user.keyHash !== JSON.parse(file).keyHash)\r\n                window.location.hash = \"#/auth\";\r\n            sessionStorage.setItem(\"whoami\", window.user.keyHash);\r\n            window.location.hash = \"#/\";\r\n        }\r\n    }, []);\r\n\r\n    function downloadKEY() {\r\n        const a = document.createElement(\"a\");\r\n        a.href = window.URL.createObjectURL(\r\n            new Blob([JSON.stringify(window.user.userInfo)], {\r\n                type: \"meschain\",\r\n            })\r\n        );\r\n        a.download = \"key.meschain\";\r\n        a.click();\r\n        window.URL.revokeObjectURL(a.href);\r\n    }\r\n    return (\r\n        <div className=\"main__class\">\r\n            <Card\r\n                width={\"auto\"}\r\n                mx={\"auto\"}\r\n                my={\"auto\"}\r\n                maxWidth={\"420px\"}\r\n                bg={\"#2c2c2c\"}\r\n                color={\"white\"}\r\n                border={0}\r\n                p={4}\r\n                style={{ boxShadow: \"9px 9px 8px rgb(0 0 0)\" }}\r\n            >\r\n                {kind === \"1\" && (\r\n                    <React.Fragment>\r\n                        <Heading>Hang On</Heading>\r\n                        <Text.p>\r\n                            Download your keys and keep them at a safe private\r\n                            place.\r\n                        </Text.p>\r\n                        <Box\r\n                            style={{\r\n                                display: \"flex\",\r\n                                justifyContent: \"center\",\r\n                            }}\r\n                        >\r\n                            <Button.Text\r\n                                icon=\"ArrowForward\"\r\n                                iconpos=\"right\"\r\n                                style={{ color: \"#ffffff\" }}\r\n                                onClick={() => (window.location.hash = \"#/\")}\r\n                            >\r\n                                Continue\r\n                            </Button.Text>\r\n                            <Button mx={4} onClick={downloadKEY}>\r\n                                Download\r\n                            </Button>\r\n                        </Box>\r\n                        <Text.p style={{ fontStyle: \"italic\" }}>\r\n                            If you loose this key their is no way of accessing\r\n                            your messages again.\r\n                        </Text.p>\r\n                    </React.Fragment>\r\n                )}\r\n                {kind === \"0\" && (\r\n                    <React.Fragment>\r\n                        <Heading>Hang On</Heading>\r\n                        <Text.p>\r\n                            Just a moment. We're preparing your chats.\r\n                        </Text.p>\r\n                        <Text.p style={{ fontStyle: \"italic\" }}>\r\n                            You'll be redirected automatically\r\n                        </Text.p>\r\n                    </React.Fragment>\r\n                )}\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default OnBoarding;\r\n","import React from \"react\";\r\nimport {\r\n    HashRouter as Router,\r\n    Route,\r\n    Switch,\r\n    Redirect,\r\n} from \"react-router-dom\";\r\nimport AuthPage from \"./components/AuthPage/index\";\r\nimport HomePage from \"./components/HomePage/index\";\r\nimport OnBoarding from \"./components/OnBoarding\";\r\nfunction App() {\r\n    return (\r\n        <Router>\r\n            <Switch>\r\n                <Route path=\"/auth\" component={AuthPage} />\r\n                <Route path=\"/setup\" component={OnBoarding} />\r\n                <PrivateRoute path=\"/\" component={HomePage} />\r\n            </Switch>\r\n        </Router>\r\n    );\r\n}\r\nfunction authGuard() {\r\n    if (!sessionStorage[\"whoami\"]) return false;\r\n    if (!window.user) {\r\n        sessionStorage.clear();\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\nfunction PrivateRoute({ component: Component, ...rest }) {\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={(props) =>\r\n                authGuard() === true ? (\r\n                    <Component {...props} />\r\n                ) : (\r\n                    <Redirect\r\n                        to={{\r\n                            pathname: \"/auth\",\r\n                            state: { from: props.location },\r\n                        }}\r\n                    />\r\n                )\r\n            }\r\n        />\r\n    );\r\n}\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}